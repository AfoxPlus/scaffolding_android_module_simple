apply plugin: 'maven-publish'
apply { from("distribution.gradle.kts") }

def repoUsername = findProperty("REPO_USERID") ?: System.getenv("REPO_USERID")
def repoPassword = findProperty("REPO_TOKEN") ?: System.getenv("REPO_TOKEN")
def groupApp = group
def versionApp = version

println("Here - findProperty(\"REPO_USERID\"): " + findProperty("REPO_USERID"))
println("Here - System.getenv(\"REPO_USERID\"): " + System.getenv("REPO_USERID"))
println("Here - findProperty(\"REPO_TOKEN\"): " + findProperty("REPO_TOKEN"))
println("Here - System.getenv(\"REPO_TOKEN\"): " + System.getenv("REPO_TOKEN"))

println("Here - repoUsername: " + repoUsername)
println("Here - repoPassword: " + repoPassword)
println("Here - groupApp: " + groupApp)
println("Here - versionApp: " + versionApp)

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                //from components.release
                groupId groupApp
                //TODO change artifactId
                artifactId "scaffolding"
                version versionApp
            }

            debug(MavenPublication) {
                //from components.debug
                groupId groupApp
                //TODO change artifactId
                artifactId "scaffolding"
                version versionApp
            }
        }
        repositories {
            maven {
                name = "GithubPackages"
                url = "https://maven.pkg.github.com/Hacybeyker/app-android-example"
                allowInsecureProtocol(true)
                credentials {
                    username = repoUsername
                    password = repoPassword
                }
            }
        }
    }
}

/*task cleanBuildPublishLocal(type: GradleBuild) {
    tasks = ['clean', 'build', 'publishToMavenLocal']
}

task cleanBuildPublish(type: GradleBuild) {
    tasks = ['clean', 'build', 'publish']
}*/